language: android
sudo: false

addons:
  apt:
    sources: ['ubuntu-toolchain-r-test','llvm-toolchain-precise-3.5']
    packages: ['clang-3.5', 'p7zip-full']

android:
  components:
    - android-23
    - platform-tools
    - extra-android-support
    - extra-android-m2repository
    #- sys-img-aarch64-android-23
    - sys-img-armeabi-v7a-android-19
    #- sys-img-x86-android-23

cache:
  directories:
    - $HOME/cache

env:
  matrix:
    # Test builds first, since they don't upload things.
    - TEST_GOAL=coverage
    - TEST_GOAL=performance
    # Production builds after test builds so only tested artifacts are uploaded.
    - TARGET=x86_64-linux
    - TARGET=aarch64-linux-android
    - TARGET=arm-linux-androideabi
    - TARGET=i686-linux-android

matrix:
  fast_finish: true

install:
  # Move files from cache directory.
  - make cache
  # Set-up step.
  - export NDK_HOME=$HOME/android-ndk
  - make setup

script:
  # Build/install step.
  - buildscripts/04_build || (cat projects/tox4j/target/config.log && false)
  - mkdir -p /tmp/android-travis
  - buildscripts/05_android
  # Upload artifacts if the build was not a test build. Test builds instrument
  # the code to gather coverage information. We don't want that instrumentation
  # to end up in production builds.
  - if [ -z "$TEST_GOAL" ]; then buildscripts/06_upload; fi

before_cache:
  # Hack to make sbt-coveralls work with our non-standard directory layout.
  - ln -s $PWD/.git projects/tox4j/
  - ln -s $PWD/projects/tox4j/src/main/java/* $PWD/projects/tox4j/
  - if [ "$TEST_GOAL" = "coverage" -a -f "projects/tox4j/target/scala-2.11/coverage-report/cobertura.xml" ]; then cd projects/tox4j && $HOME/cache/usr/bin/sbt coveralls; fi
  # Clean up cache.
  - find $HOME/cache/ivy2 -type f -name "ivydata-*.properties" -delete
  - find $HOME/cache/sbt/boot -name "sbt.*.lock" -delete

branches:
  only:
    - master
    - staging
