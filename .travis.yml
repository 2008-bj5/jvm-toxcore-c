language: scala
sudo: false

addons:
  apt:
    sources: ['ubuntu-toolchain-r-test','llvm-toolchain-precise-3.5']
    packages: ['clang-3.5', 'p7zip-full']

cache:
  directories:
    - $HOME/cache

env:
  matrix:
    - TOX4J_TARGET=arm-linux-androideabi
    - TOX4J_TARGET=i686-linux-android
    - TOX4J_TARGET=host REPO=mannol BRANCH=new_api
    - TOX4J_TARGET=host TEST_GOAL=coverage
    - TOX4J_TARGET=host TEST_GOAL=performance

matrix:
  fast_finish: true
  allow_failures:
    - env: TOX4J_TARGET=host TEST_GOAL=performance

install:
  # Move files from cache directory.
  - rm -rf $HOME/.ivy2 $HOME/.sbt $HOME/.usr
  - mkdir -p $HOME/cache/ivy2 $HOME/cache/sbt $HOME/cache/usr
  - ln -s $HOME/cache/ivy2 $HOME/.ivy2
  - ln -s $HOME/cache/sbt  $HOME/.sbt
  - ln -s $HOME/cache/usr  $HOME/.usr
  # Set-up step.
  - make setup-$TOX4J_TARGET PREFIX=$HOME

script:
  # Build/install step.
  - make install PREFIX=$HOME GOAL=$TEST_GOAL TOXCORE_REPO=$REPO TOXCORE_BRANCH=$BRANCH

before_cache:
  - ln -s $PWD/.git projects/tox4j/
  - ln -s $PWD/projects/tox4j/src/main/java/* $PWD/projects/tox4j/
  - if [ "$TEST_GOAL" = "coverage" ]; then cd projects/tox4j && sbt coveralls; fi
  # Clean up cache.
  - find $HOME/cache/ivy2 -type f -name "ivydata-*.properties" -delete
  - find $HOME/cache/ivy2 -type d -name "im.tox" -exec rm -rf {} ";"
  - find $HOME/cache/sbt/boot -name "sbt.*.lock" -delete

branches:
  only:
    - auto

notifications:
  webhooks: http://slevermann.de:54856/travis
